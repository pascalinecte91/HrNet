{"version":3,"file":"static/js/378.fb21172d.chunk.js","mappings":"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","sources":["data/column.js","components/pagination/Pagination.js","components/search/EmployeeSearch.js","components/customDataTable/dataTableStyles.js","components/form/EditForm.js","pages/listEmployees/ListEmployees.jsx","redux/actions.js"],"sourcesContent":["\r\nexport const columns = [\r\n  /**\r\n   * Colonne du prénom.  (Les commentaires pour les autres colonnes suivent le même modèle)\r\n   * @type {object}\r\n   * @property {string} name - Le nom de la colonne (\"First Name\").\r\n   * @property {function} selector - Fonction pour extraire la valeur de la colonne à partir de la ligne.\r\n   * @property {boolean} sortable - Indique si la colonne est triable.\r\n   * @property {function} sortFunction - Fonction de tri personnalisée pour trier les valeurs de la colonne.\r\n   * @property {function} cell - Fonction pour afficher le contenu de la cellule de la colonne.\r\n   */\r\n  {\r\n    name: \"First Name\",\r\n    selector: (row) => row.firstName,\r\n    sortable: true,\r\n    sortFunction: (a, b) => a.firstName.localeCompare(b.firstName),\r\n    cell: (row) => (\r\n      <span>\r\n        {row.firstName.charAt(0).toUpperCase() + row.firstName.slice(1)}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    name: \"Last Name\",\r\n    selector: (row) => row.lastName,\r\n    sortable: true,\r\n    sortFunction: (a, b) => a.lastName.localeCompare(b.lastName),\r\n  },\r\n  {\r\n    name: \"Start Date\",\r\n    selector: (row) => row.startDate,\r\n    sortable: true,\r\n    sortFunction: (a, b) => {\r\n      //La méthode join est  utilisée pour transformer le tableau en une chaîne de caractères\r\n      //au format compatible Date de JavaScript, qui permet de créer un objet Date\r\n      const dateA = a.startDate.split(\"/\").reverse().join(\"-\");\r\n      const dateB = b.startDate.split(\"/\").reverse().join(\"-\");\r\n      return new Date(dateA) - new Date(dateB);\r\n    },\r\n  },\r\n  {\r\n    name: \"Department\",\r\n    selector: (row) => row.department,\r\n    sortable: true,\r\n    sortFunction: (a, b) => a.department.localeCompare(b.department),\r\n  },\r\n  {\r\n    name: \"Date of Birth\",\r\n    selector: (row) => row.dateOfBirth,\r\n    sortable: true,\r\n    sortFunction: (a, b) => {\r\n      const dateA = a.dateOfBirth.split(\"/\").reverse().join(\"-\");\r\n      const dateB = b.dateOfBirth.split(\"/\").reverse().join(\"-\");\r\n      return new Date(dateA) - new Date(dateB);\r\n    },\r\n  },\r\n  {\r\n    name: \"Street\",\r\n    selector: (row) => row.street,\r\n    sortable: true,\r\n    sortFunction: (a, b) => a.street.localeCompare(b.street),\r\n  },\r\n  {\r\n    name: \"City\",\r\n    selector: (row) => row.city,\r\n    sortable: true,\r\n\r\n    sortFunction: (a, b) => a.city.localeCompare(b.city),\r\n  },\r\n  {\r\n    name: \"State\",\r\n    selector: (row) => row.state,\r\n    sortable: true,\r\n    sortFunction: (a, b) => a.state.localeCompare(b.state),\r\n  },\r\n  {\r\n    name: \"Zip Code\",\r\n    selector: (row) => row.zipCode,\r\n    sortable: true,\r\n    sortFunction: (a, b) => a.zipCode.localeCompare(b.zipCode),\r\n  },\r\n];\r\n","import React from \"react\";\r\n// external component\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n/**\r\n * @Composant de pagination.\r\n * @param {Object} props - Les propriétés du composant.\r\n * @param {number} props.pageCount - Le nombre total de pages.\r\n * @param {number} props.currentPage - La page actuelle.\r\n * @param {function} props.onPageChange - La fonction de gestion du changement de page.\r\n * @returns {JSX.Element}\r\n */\r\n\r\nconst Pagination = ({ pageCount, currentPage, onPageChange }) => {\r\n  const isFirstPage = currentPage === 0;\r\n  const isLastPage = currentPage === pageCount;\r\n\r\n  const previousLabel = isFirstPage ? <span>{\"<\"}</span> : \"<\";\r\n  const nextLabel = isLastPage ? <span>{\">\"}</span> : \">\";\r\n\r\n  return (\r\n    <ReactPaginate\r\n      pageCount={pageCount}\r\n      pageRangeDisplayed={5}\r\n      marginPagesDisplayed={2}\r\n      onPageChange={({ selected }) => onPageChange(selected)}\r\n      forcePage={currentPage}\r\n      containerClassName=\"pagination\"\r\n      pageClassName=\"page-item\"\r\n      activeClassName=\"active\"\r\n      nextLinkClassName={isLastPage ? \"hidden\" : \"\"}\r\n      previousLinkClassName={isFirstPage ? \"hidden\" : \"\"}\r\n      previousLabel={previousLabel}\r\n      nextLabel={nextLabel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\n// external component\r\nimport SearchBox from \"react-search-box\";\r\n\r\n/**\r\n * @Composant recherche d'employé.\r\n * @param {Object} props - Les propriétés du composant.\r\n * @param {function} props.onSearch - Fonction appelée lors de la recherche.\r\n */\r\nconst EmployeeSearch = ({ onSearch }) => {\r\n  // État local pour la valeur de recherche\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  // Gère les modifications de la valeur de recherche.\r\n  const handleSearch = (value) => {\r\n    setSearchValue(value); // Met à jour la valeur de recherche dans l'état local.\r\n    onSearch(value); // Appelle la fonction de rappel fournie avec la nouvelle valeur de recherche.\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <label htmlFor=\"search__input\">Recherchez un employé</label>\r\n      <SearchBox\r\n        id=\"search__input\"\r\n        placeholder=\"Entrez les lettres du nom...\"\r\n        value={searchValue}\r\n        onChange={handleSearch}\r\n        aria-label=\"Recherchez un employé\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeSearch;\r\n","/**\r\n * Styles personnalisés pour la table DataTable.\r\n * @typedef {Object} CustomStyles\r\n * @property {Object} table - Styles de la table.\r\n * @property {Object} headRow - Styles de la ligne d'en-tête.\r\n */\r\n\r\nexport const customStyles = {\r\n  table: {\r\n    style: {\r\n      width: \"80%\", // largeur de la table\r\n      margin: \"auto\", //marge pour centrer\r\n      marginBottom: \"80px\", // marge en bas\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Styles de la ligne d'en-tête.\r\n   * @type {Object}\r\n   */\r\n  headRow: {\r\n    style: {\r\n      backgroundColor: \"#6f8f6f\", //fond en-tete\r\n      fontSize: \"16px\", //taille texte entete\r\n      color: \"white\", // Couleur du texte de la ligne d'en-tête\r\n      fontStyle: \"normal\", // style police\r\n    },\r\n  },\r\n  \r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"banby-modal-customize-react\";\r\n\r\nconst EditForm = ({ employeeData, onSave, onCancel }) => {\r\n  useEffect(() => {\r\n    console.log(\"Initial Employee Data:\", employeeData);\r\n    // Le reste de votre code d'effet\r\n  }, [employeeData]);\r\n\r\n  const [isModalOpenEdit, setIsModalOpenEdit] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    street: employeeData.street || \"\",\r\n    city: employeeData.city || \"\",\r\n    zipCode: employeeData.zipCode || \"\",\r\n  });\r\n\r\n  const handleChangeEmpl = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmitEmpl = (e) => {\r\n    e.preventDefault();\r\n    const updatedEmployee = { ...formData, id: employeeData.id };\r\n    console.log(\"Form Data After Save:\", updatedEmployee);\r\n    onSave(updatedEmployee);\r\n    closeModalEdit();\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    console.log(\"Cancel button clicked\");\r\n    setFormData({\r\n      street: employeeData.street || \"\",\r\n      city: employeeData.city || \"\",\r\n      zipCode: employeeData.zipCode || \"\",\r\n    });\r\n    onCancel();\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    setIsModalOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"editForm\">\r\n        <h2 className=\"editForm__title\">modification de l'employé</h2>\r\n        <p className=\"editForm__subtitle\">\r\n          <strong>4 champs vous sont proposés pour les modifications</strong>\r\n        </p>\r\n\r\n        <form className=\"editForm__input\" onSubmit={handleSubmitEmpl}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"street\">Street</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"street\"\r\n              name=\"street\"\r\n              value={formData.street}\r\n              onChange={handleChangeEmpl}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"city\">City</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"city\"\r\n              name=\"city\"\r\n              value={formData.city}\r\n              onChange={handleChangeEmpl}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"zipCode\">Zip Code</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"zipCode\"\r\n              name=\"zipCode\"\r\n              value={formData.zipCode}\r\n              onChange={handleChangeEmpl}\r\n            />\r\n          </div>\r\n          <div className=\"editForm__buttons\">\r\n          <button type=\"submit\" className=\"edit_save\">Save</button>\r\n          <button type=\"button\" onClick={onCancel} className=\"edit_cancel\">Cancel</button>\r\n          </div>\r\n        </form>\r\n        <Modal\r\n          isOpen={isModalOpenEdit}\r\n          onClose={closeModalEdit}\r\n          onCancel={handleCancelEdit}\r\n          onSave={onSave}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport logo from \"assets/logo_sans_fond.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { columns } from \"data/column.js\";\r\n// Components\r\nimport Pagination from \"components/pagination/Pagination.js\";\r\nimport EmployeeSearch from \"components/search/EmployeeSearch.js\";\r\nimport { customStyles } from \"components/customDataTable/dataTableStyles.js\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FaTrashAlt, FaPencilAlt } from \"react-icons/fa\";\r\nimport mockEmployed from \"data/mockEmployed.js\";\r\nimport { removeEmployee } from \"redux/actions.js\";\r\nimport { Modal } from \"banby-modal-customize-react\";\r\nimport { updateProperties } from \"redux/actions.js\";\r\nimport EditForm from \"components/form/EditForm.js\";\r\n\r\n/**\r\n * @Composant pour afficher la liste des employés.\r\n * @returns {JSX.Element} Liste des employés.\r\n */\r\nconst ListEmployees = () => {\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const startIndex = currentPage * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const employees = useSelector((state) => state.employees.employees);\r\n  // console.log(\"Liste des employés dans le state Redux :\", employees);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [editingEmployee, setEditingEmployee] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  /**\r\n   * Gère la recherche d'employés en fonction de la valeur de recherche.\r\n   * @param {string} value - La valeur de recherche.\r\n   */\r\n  const handleSearch = (value) => {\r\n    setSearchValue(value);\r\n    setCurrentPage(0);\r\n  };\r\n\r\n  // Combiner à la fois les employés existants et les nouveaux employés\r\n  const allEmployees = [...employees, ...mockEmployed].map((employee) => ({\r\n    ...employee,\r\n    showDeleteMessage: false,\r\n  }));\r\n\r\n  /**\r\n   * Filtre les employés en fonction de la valeur de recherche.\r\n   * @type {Array} Liste des employés filtrés.\r\n   */\r\n  const filteredItems = allEmployees.filter((employee) => {\r\n    const lastNameLowercase = employee.lastName.toLowerCase();\r\n    const searchValueLowercase = searchValue.toLowerCase();\r\n    return lastNameLowercase.startsWith(searchValueLowercase);\r\n  });\r\n\r\n  const displayedCurrentItems = filteredItems.slice(startIndex, endIndex);\r\n\r\n  // Réinitialise la page actuelle à 0 chaque fois que la valeur de recherche change.\r\n  useEffect(() => {\r\n    setCurrentPage(0);\r\n  }, [searchValue]);\r\n\r\n  // Gère le changement du nombre d'éléments par page.\r\n  const handleItemsPerPageChange = (event) => {\r\n    const { value } = event.target;\r\n    setItemsPerPage(parseInt(value, 10));\r\n    setCurrentPage(0);\r\n  };\r\n\r\n  const handleDeleteEmployee = (employee) => {\r\n    console.log(\"Suppression de l'employé :\", employee);\r\n    // Obtenez l'ID de l'employé à supprimer\r\n    const employeeId = employee.id;\r\n    console.log(\"ID de l'employé à supprimer :\", employeeId);\r\n\r\n    if (employees.some((emp) => emp.id === employeeId)) {\r\n      dispatch(removeEmployee(employeeId));\r\n      setModalTitle(\"L'employé a été supprimé\");\r\n      setModalOpen(true);\r\n    } else {\r\n      setModalTitle(\"Suppression interdite ! Employé mockEmployed.\");\r\n      setModalOpen(true);\r\n    }\r\n  };\r\n  const handleSaveEmployee = (updatedEmployee) => {\r\n    // console.log(\"Save button clicked\");\r\n    dispatch(updateProperties(updatedEmployee));\r\n\r\n    setIsEditing(false);\r\n    setEditingEmployee(updatedEmployee);\r\n\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    console.log(\"Save button clicked\");\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleEditEmployee = (employee) => {\r\n    console.log(\"Editing Employee Data:\", employee);\r\n    // Obtenez l'ID de l'employé à modifier\r\n    const employeeId = employee.id;\r\n    console.log(\"ID de l'employé à modifier :\", employeeId);\r\n  \r\n    if (employees.some((emp) => emp.id === employeeId)) {\r\n      setEditingEmployee(employee);\r\n      setIsEditing(true);\r\n    } else {\r\n      setModalTitle(\"Modification interdite ! Employé mockEmployed.\");\r\n      setModalOpen(true);\r\n    }\r\n  };\r\n  \r\n  const employeTableCol = [\r\n    ...columns,\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <div className=\"action-cell\">\r\n          <button\r\n            onClick={() => handleDeleteEmployee(row)}\r\n            aria-label=\"Delete\"\r\n            style={{\r\n              border: \"none\",\r\n              paddingRight: \"5px\",\r\n              backgroundColor: \"white\",\r\n            }}\r\n          >\r\n            <FaTrashAlt size={15} color=\"red\" />\r\n          </button>\r\n          <button\r\n            onClick={() => handleEditEmployee(row)} aria-label=\"Edit\"\r\n            style={{ border: \"none\", paddingLeft: \"5px\", backgroundColor: \"white\",}}>\r\n            <FaPencilAlt size={15} color=\"blue\" />\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <section className=\"list\">\r\n        <h2 className=\"list__name\">HRNet</h2>\r\n        <img\r\n          className=\"list__logo\"\r\n          src={logo}\r\n          alt=\"logo appli\"\r\n          width={200}\r\n          height={170}\r\n        />\r\n        <div className=\"list__change\">\r\n          <h2 className=\"list__title\">List Employee</h2>\r\n        </div>\r\n      </section>\r\n      {!isEditing && (\r\n      <section className=\"pagination-search\">\r\n        <div className=\"pagination-search__toggle\">\r\n          <span>Nbre par page : </span>\r\n          <select\r\n            className=\"page\"\r\n            value={itemsPerPage}\r\n            onChange={handleItemsPerPageChange}\r\n          >\r\n            <option value=\"10\">10</option>\r\n            <option value=\"25\">25</option>\r\n            <option value=\"50\">50</option>\r\n            <option value=\"100\">100</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"pagination-search__lot\">\r\n          <Pagination\r\n            pageCount={Math.ceil(filteredItems.length / itemsPerPage)}\r\n            currentPage={currentPage}\r\n            onPageChange={setCurrentPage}\r\n          />\r\n          <EmployeeSearch onSearch={handleSearch} />\r\n          <div className=\"pagination-search__number\">\r\n            {Math.min(filteredItems.length, endIndex)} / {filteredItems.length}{\" \"}\r\n            salariés\r\n          </div>\r\n        </div>\r\n      </section>\r\n      )}\r\n      {isEditing ? (\r\n        <EditForm\r\n          employeeData={editingEmployee}\r\n          onSave={handleSaveEmployee}\r\n          onCancel={handleCancelEdit}\r\n          isEditing={isEditing}\r\n          \r\n        />\r\n      ) : (\r\n        <DataTable\r\n          columns={employeTableCol}\r\n          data={displayedCurrentItems}\r\n          customStyles={customStyles}\r\n        />\r\n      )}\r\n\r\n      {modalOpen && (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n          onClose={() => setModalOpen(false)}\r\n          modalTitle={modalTitle}\r\n          modalClassName=\"modal-title\"\r\n          modalStyle={{\r\n            width: \"700px\",\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"13px\",\r\n          }}\r\n        ></Modal>\r\n        \r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListEmployees;\r\n","\r\nexport const updateProperties = (employeeData) => ({\r\n  type: \"employees/updateProperties\",\r\n  payload: employeeData,\r\n});\r\n\r\n\r\nexport const addEmployee = (employeeData) => ({\r\n  type: \"employees/addEmployee\",\r\n  payload: employeeData,\r\n});\r\n\r\nexport const removeEmployee = (employeeId) => ({\r\n  type: \"employees/removeEmployee\", \r\n  payload: employeeId,\r\n});\r\n\r\n\r\n"],"names":["columns","name","selector","row","firstName","sortable","sortFunction","a","b","localeCompare","cell","_jsx","children","charAt","toUpperCase","slice","lastName","startDate","dateA","split","reverse","join","dateB","Date","department","dateOfBirth","street","city","state","zipCode","_ref","pageCount","currentPage","onPageChange","isFirstPage","isLastPage","previousLabel","nextLabel","ReactPaginate","pageRangeDisplayed","marginPagesDisplayed","_ref2","selected","forcePage","containerClassName","pageClassName","activeClassName","nextLinkClassName","previousLinkClassName","onSearch","_useState","useState","_useState2","_slicedToArray","searchValue","setSearchValue","_jsxs","className","htmlFor","SearchBox","id","placeholder","value","onChange","customStyles","table","style","width","margin","marginBottom","headRow","backgroundColor","fontSize","color","fontStyle","employeeData","onSave","onCancel","useEffect","console","log","isModalOpenEdit","setIsModalOpenEdit","_useState3","_useState4","formData","setFormData","handleChangeEmpl","e","_e$target","target","prevFormData","_objectSpread","_defineProperty","closeModalEdit","_Fragment","onSubmit","preventDefault","updatedEmployee","type","onClick","Modal","isOpen","onClose","dispatch","useDispatch","setCurrentPage","itemsPerPage","setItemsPerPage","startIndex","endIndex","_useState5","_useState6","employees","useSelector","_useState7","_useState8","modalOpen","setModalOpen","_useState9","_useState10","modalTitle","setModalTitle","_useState11","_useState12","editingEmployee","setEditingEmployee","_useState13","_useState14","isEditing","setIsEditing","filteredItems","concat","_toConsumableArray","mockEmployed","map","employee","showDeleteMessage","filter","lastNameLowercase","toLowerCase","searchValueLowercase","startsWith","displayedCurrentItems","employeTableCol","employeeId","some","emp","removeEmployee","handleDeleteEmployee","border","paddingRight","FaTrashAlt","size","handleEditEmployee","paddingLeft","FaPencilAlt","src","logo","alt","height","event","parseInt","Pagination","Math","ceil","length","EmployeeSearch","min","EditForm","updateProperties","DataTable","data","modalClassName","modalStyle","padding","borderRadius","payload","addEmployee"],"sourceRoot":""}